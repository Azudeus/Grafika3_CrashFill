[1mdiff --cc main.c[m
[1mindex 4b7c648,ca3f9ba..0000000[m
[1m--- a/main.c[m
[1m+++ b/main.c[m
[36m@@@ -249,7 -249,7 +249,11 @@@[m [mint main()[m
      gambarObject(baling, &M, c4);[m
      int xBaling = 1189;[m
      int yBaling = 100;[m
[32m++<<<<<<< HEAD[m
[32m +[m
[32m++=======[m
[32m+     gambarObject(ledakan3,&M,c4);[m
[32m++>>>>>>> 52cb030acf371b7e7586b5b764510ae5dc4cc454[m
  //----------------------------------------------------------------------------------[m
  [m
  	//x = 700; y = 1200;       // Where we are going to put the pixel[m
[36m@@@ -469,12 -461,12 +471,20 @@@[m
  				gambarObject(ledakan1, &M, c5);[m
  				gambarObject(ledakan2, &M, c5);[m
  				gambarObject(ledakan3, &M, c5);[m
[31m -[m
[32m++<<<<<<< HEAD[m
[32m +				gambarObject(pilot, &M, c1);[m
[32m +				gambarObject(parasut, &M, c1);[m
[32m +				// fill (l1.x,l3.y,WHITE);[m
[32m +				// fill (l2.x,l3.y,WHITE);[m
[32m +				// fill (l3.x,l3.y,WHITE);[m
[32m++=======[m
[32m++[m
[32m++>>>>>>> 52cb030acf371b7e7586b5b764510ae5dc4cc454[m
  				fillMatrix(&M, xBaling, yBaling, WHITE);[m
[32m+ 				fillMatrix(&M, xWheel, yWheel, WHITE);[m
[32m+ 				fillMatrix(&M, l1.x, l1.y, BLUE);[m
[32m+ 				fillMatrix(&M, l2.x, l2.y, BLUE);[m
[32m+ 				fillMatrix(&M, l3.x, l3.y, BLUE);[m
  				fillMatrix(&M, 550, 170, RED); // ledakan[m
  				fillMatrix(&M, 600, 690, RED); // meriam bawah[m
  				fillMatrix(&M, 600, 680, GREEN); // meriam atas[m
[1mdiff --git a/lingkaran.c b/lingkaran.c[m
[1mindex c897283..8ca893b 100644[m
[1m--- a/lingkaran.c[m
[1m+++ b/lingkaran.c[m
[36m@@ -4,7 +4,7 @@[m
 #include <stdio.h>[m
 #include <stdlib.h>[m
 [m
[31m-void gambarLingkaran(Lingkaran* L, Matrix* M, char c) {[m
[32m+[m[32mvoid gambarLingkaran(Lingkaran* L, Matrix* M, char c, int penuh) {[m
     if (sizeof(L) != 0){[m
         if ((sizeof(M -> xsize)) != 0) {[m
             if (sizeof(M -> ysize != 0)) {[m
[36m@@ -14,24 +14,15 @@[m [mvoid gambarLingkaran(Lingkaran* L, Matrix* M, char c) {[m
                     while (x - L->x <= y - L->y) {[m
                         int dx = x - L->x;[m
                         int dy = y - L->y;[m
[31m-                        if (L->x + dx >= 0 && L->x + dx < M->xsize && L->y + dy >= 0 && L->y + dy < M->ysize) {[m
[31m-                            M -> M[L->y + dy][L->x + dx] = c;[m
[31m-                        }[m
[31m-                        if (L->x - dx >= 0 && L->x - dx < M->xsize && L->y + dy >= 0 && L->y + dy < M->ysize) {[m
[31m-                            M -> M[L->y + dy][L->x - dx] = c;[m
[31m-                        }[m
[32m+[m
[32m+[m[32m                        //setengan lingkaran[m
                         if (L->x + dx >= 0 && L->x + dx < M->xsize && L->y - dy >= 0 && L->y - dy < M->ysize) {[m
                             M -> M[L->y - dy][L->x + dx] = c;[m
                         }[m
                         if (L->x - dx >= 0 && L->x - dx < M->xsize && L->y - dy >= 0 && L->y - dy < M->ysize) {[m
                             M -> M[L->y - dy][L->x - dx] = c;[m
                         }[m
[31m-                        if (L->x + dy >= 0 && L->x + dy < M->xsize && L->y + dx >= 0 && L->y + dx < M->ysize) {[m
[31m-                            M -> M[L->y + dx][L->x + dy] = c;[m
[31m-                        }[m
[31m-                        if (L->x - dy >= 0 && L->x - dy < M->xsize && L->y + dx >= 0 && L->y + dx < M->ysize) {[m
[31m-                            M -> M[L->y + dx][L->x - dy] = c;[m
[31m-                        }[m
[32m+[m
                         if (L->x + dy >= 0 && L->x + dy < M->xsize && L->y - dx >= 0 && L->y - dx < M->ysize) {[m
                             M -> M[L->y - dx][L->x + dy] = c;[m
                         }[m
[36m@@ -39,6 +30,24 @@[m [mvoid gambarLingkaran(Lingkaran* L, Matrix* M, char c) {[m
                             M -> M[L->y - dx][L->x - dy] = c;[m
                         }[m
 [m
[32m+[m[32m                        //lingkaran penuh[m
[32m+[m[32m                        if (penuh) {[m
[32m+[m[32m                            if (L->x + dx >= 0 && L->x + dx < M->xsize && L->y + dy >= 0 && L->y + dy < M->ysize) {[m
[32m+[m[32m                                M -> M[L->y + dy][L->x + dx] = c;[m
[32m+[m[32m                            }[m
[32m+[m[32m                            if (L->x - dx >= 0 && L->x - dx < M->xsize && L->y + dy >= 0 && L->y + dy < M->ysize) {[m
[32m+[m[32m                                M -> M[L->y + dy][L->x - dx] = c;[m
[32m+[m[32m                            }[m
[32m+[m[41m                            [m
[32m+[m[32m                            if (L->x + dy >= 0 && L->x + dy < M->xsize && L->y + dx >= 0 && L->y + dx < M->ysize) {[m
[32m+[m[32m                                M -> M[L->y + dx][L->x + dy] = c;[m
[32m+[m[32m                            }[m
[32m+[m[32m                            if (L->x - dy >= 0 && L->x - dy < M->xsize && L->y + dx >= 0 && L->y + dx < M->ysize) {[m
[32m+[m[32m                                M -> M[L->y + dx][L->x - dy] = c;[m
[32m+[m[32m                            }[m
[32m+[m[32m                        }[m
[32m+[m[41m                        [m
[32m+[m
                         if (err <= 0)[m
                         {[m
                             dx += 1;[m
[1mdiff --git a/lingkaran.h b/lingkaran.h[m
[1mindex 9103ec5..53009cc 100644[m
[1m--- a/lingkaran.h[m
[1m+++ b/lingkaran.h[m
[36m@@ -8,7 +8,7 @@[m [mtypedef struct[m
 } Lingkaran;[m
 [m
 //Menggambar lingkaran pada matriks[m
[31m-void gambarLingkaran(Lingkaran* L, Matrix* M, char c);[m
[32m+[m[32mvoid gambarLingkaran(Lingkaran* L, Matrix* M, char c, int penuh);[m
 [m
 //Memeriksa apakah semua bagian lingkaran pada L pada matriks M berisi karakter c[m
 //Mengembalikan 0 jika semuanya berisi karakter c[m
[1mdiff --git a/main b/main[m
[1mindex 005425a..bf181b0 100755[m
Binary files a/main and b/main differ
[1mdiff --git a/object.h b/object.h[m
[1mindex 4717f48..b5e8931 100644[m
[1m--- a/object.h[m
[1m+++ b/object.h[m
[36m@@ -9,10 +9,11 @@[m
 typedef struct[m
 {[m
 	Point pointInit;[m
[31m-	Point P[30];[m
[32m+[m	[32mPoint P[114];[m
 	Lingkaran L[2];[m
 	int nlingkaran;[m
 	int size;[m
[32m+[m	[32mint lingkaranPenuh;[m
 } Object;[m
 [m
 void setXYObject(Object* O, int x, int y);[m
[36m@@ -22,9 +23,10 @@[m [mvoid rotateClockwise(Object* O, int angle);[m
 void rotateWheelClockwise(Object*, int);[m
 void rotateCounterClockwise(Object* O, int angle);[m
 void wheelBounce(Object*, int, int *isXtream);[m
[32m+[m[32mvoid gambarObject(Object O, Matrix* M, char c);[m
[32m+[m[32mvoid pilotTerjun(Object*);[m
 int isWheelOut(Object*);[m
 int isOut(Object *O, float rangex, float rangey);[m
[31m-void gambarObject(Object O, Matrix* M, char c);[m
 int isObjectCollide(Object O, Matrix* M, char c);[m
 Object makePeluru(int xinit, int yinit);[m
 Object makePesawat(int xinit, int yinit);[m
[36m@@ -36,4 +38,6 @@[m [mObject makeBaling(int xinit, int yinit);[m
 Object makeMeriam(int xinitA, int yinitA);[m
 Object makeWheel(int, int);[m
 Object makeLine(int, int);[m
[32m+[m[32mObject makeParasut(int, int);[m
[32m+[m[32mObject makePilot(int, int);[m
 #endif[m
